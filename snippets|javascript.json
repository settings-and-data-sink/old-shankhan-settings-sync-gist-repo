{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Delete HTML and CSS": {
		"prefix": "dhc",
		"body": [
		  "//-------> PLACE ON TOP Deletes HTML and CSS <-------",
		  "for (let i = Number(document.body.innerHTML = \"\"), head = document.head.children, j = head.length; i < j; i++)",
		  "  if (head[i].tagName === \"LINK\") head[i].setAttribute(\"href\", \"\");",
		  "//-------End Snippet-------",
		  "",
		  "$0"
		],
		"description": "Delete HTML and CSS"
	  },
	  "Copy to Clipboard": {
		"prefix": "ccli",
		"body": [
		  "(function (elementObjToBeCopied) {",
		  "  let tempCopyClipboardTextArea = document.createElement(\"textarea\");",
		  "  tempCopyClipboardTextArea.value =",
		  "    \"value\" in elementObjToBeCopied",
		  "      ? elementObjToBeCopied.value",
		  "      : elementObjToBeCopied.textContent;",
		  "  document.body.appendChild(tempCopyClipboardTextArea);",
		  "  tempCopyClipboardTextArea.select();",
		  "  tempCopyClipboardTextArea.setSelectionRange(0, 99999);",
		  "  document.execCommand(\"copy\");",
		  "  tempCopyClipboardTextArea.remove();",
		  "})(${1:source});",
		  "",
		  "$0"
		],
		"description": "Copy to Clipboard"
	  }
}
