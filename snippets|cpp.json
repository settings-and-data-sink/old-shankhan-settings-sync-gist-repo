{
  // Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Basic Skeleton": {
    "prefix": "ske",
    "body": [
      "#include <bits/stdc++.h>",
      "using namespace std;",
      "",
      "int main()",
      "{",
      "    $0",
      "    cout << endl;",
      "    return 0;",
      "}",
      ""
    ],
    "description": "Skeleton for cpp"
  },
   // line
   "Long line - just": {
    "prefix": "line",
    "body": [
      "cout<<\"\\n-------------------------------------------------------------\\n\";$0"
    ],
    "description": "A big line for console"
  },
  "File I/O": {
  "prefix": "io",
  "body": [
    "// freopen(\"in.txt\", \"r\", stdin);",
    "// freopen(\"out.txt\", \"r\", stdout);\n"
  ],
  "description": "Standard input/output from local files"
},

  "function_program": {
    "prefix": "fun",
    "body": [
      "#include <bits/stdc++.h>",
      "using namespace std;",
      "",
      "$1 $2($3);",
      "",
      "int main()",
      "{",
      "    $2($5);",
      "    $6cout << endl;",
      "    return 0;",
      "}",
      "",
      "",
      "${1:return_type} ${2:function_name}($3)",
      "{",
      "    ${4:definition}",
      "}",
      ""
    ],
    "description": "Function with a main()"
  },

  "class_program": {
    "prefix": "cla",
    "body": [
      "#include <bits/stdc++.h>",
      "using namespace std;",
      "",
      "class $1",
      "{",
      "private:",
      "    $2",
      "public:",
      "    $3",
      "};",
      "",
      "int main()",
      "{",
      "    $1 $4;",
      "    $5cout << endl;",
      "    return 0;",
      "}"
    ],
    "description": "Class and a main()"
  },
  "Hello World": {
    "prefix": "hel",
    "body": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n\tcout << \"Hello, World!!\";\n\t$0cout << endl;\n\treturn 0;\n}",
    "description": "Simple Hello world program for checking the compiler"
  },

  // competitive
  "Input cases": {
    "prefix": ["comp", "cases"],
    "body": [
      "#include <bits/stdc++.h>",
      "using namespace std;",
      "",
      "void func1(${2:int n})",
      "{",
      "    // Solve and output",
      "    ${5://definition}",
      "}",
      "",
      "int main()",
      "{",
      "    int cases = 1;",
      "    ${1://}cin >> cases; // cases - optional",
      "",
      "    ${2://variable declarations};",
      "",
      "    for (int i = 0; i < cases; i++)",
      "    {",
      "        ${3:cin >> }; //take input",
      "        func1($4); // pass args\n\t}",
      "    return 0;",
      "}",
      "",
    ],
    "description": "Standard array i/p for websites"
  },
}
